# Cross-compile workflow that is manually triggered

name: Cross Compile Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      mytag:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Input Tag'
        # Default value if no value is explicitly provided
        default: '0.0.0'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:
  build:
    permissions:
      contents: write
    strategy:
      matrix:
       # os: [macos-latest, ubuntu-latest, windows-latest]
        os: [macos-latest]
        
    runs-on: ${{matrix.os}}
   
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt
            
      - name: setup prerequisites from lr
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt install libpcsclite-dev python3-all-dev python3-setuptools swig
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install swig
          else
            echo "$RUNNER_OS not supported"
          fi
      - name: Install Dependencies for All
        run: |
          pip install -r requirements.txt
          
      - name: Build Executable for ${{runner.os}}
        uses: Nuitka/Nuitka-Action@v1.0
        with:
          nuitka-version: 2.2.3
          script-name: SIMrw.py
          company-name: salopeknet
          file-version: ${{github.event.inputs.mytag}}
          onefile: false
          onefile-tempdir-spec: .SIMrw-${{runner.os}}
          output-dir: SIMrw-${{runner.os}}
         
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{runner.os}} Build
          if-no-files-found: warn
          #path: 'build/SIMrw-${{runner.os}}**'
          path: 'SIMrw-{{runner.os}}/SIMrw.dist/
          
      - name: Create Release ${{github.event.inputs.mytag}} with Builds from Nuitka
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          commit: main
          tag: ${{github.event.inputs.mytag}}
          artifacts: 'build/SIMrw-${{runner.os}}**'
          
